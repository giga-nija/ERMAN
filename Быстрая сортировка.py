def quick(a):
    if len(a) <= 1:                    # базовый случай — массив длиной 0 или 1 уже отсортирован
        return a
    p = a[len(a) // 2]                 # выбираем опорный элемент (pivot), здесь центральный элемент
    L = [x for x in a if x < p]        # все элементы меньше pivot
    M = [x for x in a if x == p]       # все элементы равные pivot (для стабильности при повторениях)
    R = [x for x in a if x > p]        # все элементы больше pivot
    return quick(L) + M + quick(R)     # рекурсивно сортируем части и объединяем результаты

if __name__ == '__main__':
    a = [10,7,8,9,1,5]                 # пример
    print(quick(a))                    # печать отсортированного массива
